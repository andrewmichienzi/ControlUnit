############################################################################
#
# A small test including all Phase 1 instructions. This one mainly
# focuses on memory access and branching.
#
# Good luck!
###########################################################################
	

.data
firstHex:    65535

secondHex:   0
	
# Random values to be used later on

val0:      1

val1:      101

val2:      1048576

val3:      103

val4:      0


.text

# Here comes the fun stuff
begin:

addi $13, $0, 5	        # Set $20 to zero
addi $2, $0, 6	        # Set $20 to zero
addi $3, $0, 8	        # Set $20 to zero
addi $4, $0, 12	        # Set $20 to zero
addi $5, $0, 17	        # Set $20 to zero
addi $6, $0, 23	        # Set $20 to zero
addi $7, $0, 28        # Set $20 to zero
addi $8, $0, 34        # Set $20 to zero
addi $9, $0, 26	        # Set $20 to zero
addi $10, $0, 38	        # Set $20 to zero
addi $11, $0, 888        # Set $20 to zero
addiu $12, $0, 15
addi $14, $0, 12

addu $13, $3, $7
and $14, $5, $11
andi $15, $6, 14
nor $16, $5, $8
or $17, $6, $7

beq $6, $7, finish
beq $14, $4, phase2
j finish

phase2:
ori $18, $3, 66
sub $19, $6, $10
subu $20, $6, $10
xor $21, $7, $11
xori $22, $9, 259

finish:
