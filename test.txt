# InputSetLoader: gvFormat.InputSetLoaderSimpleGVFormat

# This file tests the Control Unit for a simple MIPS CPU with 
# custom ALU op codes. Dont Care values are replaced with EXCLUDE
# values in each test. All instructions are tested.


BEGIN Beq
	INPUTS
     		OpCode [4]
	 	functionCode [0]
	OUTPUTS
		ALUop [1]
		ALUsrc [0]
		RegDest EXCLUDE
		Bne [0]
		Branch [1]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg EXCLUDE
		RegWrite [0]
		Halt [0]
BEGIN Bne
	INPUTS
     		OpCode [5]
	 	functionCode [0]
	OUTPUTS
		ALUop [1]
		ALUsrc [0]
		RegDest EXCLUDE
		Bne [1]
		Branch [1]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg EXCLUDE
		RegWrite [0]
		Halt [0]

BEGIN UpperImmediate
	INPUTS
     		OpCode [15]
	 	functionCode [0]
	OUTPUTS
		ALUop [6]
		ALUsrc [1]
		RegDest [1]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Ori
	INPUTS
     		OpCode [13]
	 	functionCode [0]
	OUTPUTS
		ALUop [3]
		ALUsrc [1]
		RegDest [1]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Slti
	INPUTS
     		OpCode [10]
	 	functionCode [0]
	OUTPUTS
		ALUop [15]
		ALUsrc [1]
		RegDest [1]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Sltiu
	INPUTS
     		OpCode [11]
	 	functionCode [0]
	OUTPUTS
		ALUop [7]
		ALUsrc [1]
		RegDest [1]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Sw
	INPUTS
     		OpCode [43]
	 	functionCode [0]
	OUTPUTS
		ALUop [0]
		ALUsrc [1]
		RegDest EXCLUDE
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [1]
		MemToReg EXCLUDE
		RegWrite [0]
		Halt [0]

BEGIN Xori
	INPUTS
     		OpCode [14]
	 	functionCode [0]
	OUTPUTS
		ALUop [5]
		ALUsrc [1]
		RegDest [1]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Jump
	INPUTS
     		OpCode [2]
	 	functionCode [0]
	OUTPUTS
		ALUop EXCLUDE
		ALUsrc EXCLUDE
		RegDest EXCLUDE
		Bne [0]
		Branch [0]
		Jump [1]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg EXCLUDE
		RegWrite [0]
		Halt [0]

BEGIN Jal
	INPUTS
     		OpCode [3]
	 	functionCode [0]
	OUTPUTS
		ALUop EXCLUDE
		ALUsrc EXCLUDE
		RegDest [0]
		Bne [0]
		Branch [0]
		Jump [1]
		Jal [1]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Add
	INPUTS
     		OpCode [0]
	 	functionCode [32]
	OUTPUTS
		ALUop [0]
		ALUsrc [0]
		RegDest [0]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Addu
	INPUTS
     		OpCode [0]
	 	functionCode [33]
	OUTPUTS
		ALUop [0]
		ALUsrc [0]
		RegDest [0]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN And
	INPUTS
     		OpCode [0]
	 	functionCode [36]
	OUTPUTS
		ALUop [2]
		ALUsrc [0]
		RegDest [0]
		Bne [0]
		Branch [0]
		Jump [0]
		Jal [0]
		Jr [0]
		MemRead [0]
		MemWrite [0]
		MemToReg [0]
		RegWrite [1]
		Halt [0]

BEGIN Jr
	INPUTS
     		OpCode [0]
	 	functionCode [8]
	OUTPUTS
		ALUop EXCLUDE
		ALUsrc EXCLUDE
		RegDest EXCLUDE
		Bne [0]
		Branch [0]
		Jump [1]
		Jal [0]
		Jr [1]
		MemRead [0]
		MemWrite [0]
		MemToReg EXCLUDE
		RegWrite [0]
		Halt [0]


