############################################################################
# 
# A simple (and incomplete) demonstration of one you might test basic
# I-type and R-type instructions.
#
# When constructing a complete test suite, be sure to
# 
# (1) Test all operations
# (2) Test operations with several different inputs. 
# (3) Choose inputs carefully.  For example, suppose you switched
#     control wires so that addi instructions actually executed as ori
#     instructions.  The line addi "$3, $3, 0", will work correctly in
#     spite of the mistake.
#
###########################################################################



.data
firstHex:    65535
secondHex:   0

lw $21, firstHex
lw $22, secondHex

bne $21, $22, intialize
j end

# This should only be reached after the values have been initialized
afterInit:
lui $11, 0x1001
ori $12, 0x0110
sw $11, 8($17)
sw $12, 0($18)

# This code should execute
initialize:
sw $10, val0		# $10 = 100; index0 is now 100
add $15, $10, $10	# $15 = 200
sw $15, val4

# Load addresses into $17 and $19
la $17, val0		
la $18, val4

# Load val4 (val4 = 200) using offsets
lw $11, 16($17)	
lw $12, 0($18)	

j afterInit

end: